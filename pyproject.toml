[tool.poetry]
package-mode = true
name = "spond-classes"
version = "0.14.0"
description = "Unofficial class abstraction layer for the `spond` library package."
license = "GPL-3.0-only"
authors = ["elliot-100 <3186037+elliot-100@users.noreply.github.com>"]
readme = "README.md"
repository = "https://github.com/elliot-100/Spond-classes"
documentation = "https://elliot-100.github.io/Spond-classes/"
packages = [{include = "spond_classes"}]
include = ["CHANGELOG.md"]

[tool.poetry.dependencies]
python = ">=3.10"
pydantic = {extras = ["email"], version = ">=2.7.1"}

[tool.poetry.group.dev.dependencies]
pdoc = "15.0.1"
pre-commit = "4.0.1"
ruff = "0.8.4"

[tool.poetry.group.test.dependencies]
mypy = "1.14.0"
pytest = "8.3.4"

[tool.mypy]
plugins = ["pydantic.mypy"]
enable_error_code = ["ignore-without-code"]  # Require specific codes for ignores
warn_unused_configs = true
strict = true
disallow_any_unimported = true  # Disallow Any types resulting from unfollowed imports
no_implicit_optional = true  # Don't assume arguments with default values of None are Optional

[tool.ruff]
target-version = "py310"  # Ruff doesn't respect Python dependency in [tool.poetry.dependencies]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # Rules that conflict with Ruff formatter:
    "COM812",  # Trailing comma missing
    "ISC001",  # Implicitly concatenated string literals on one line
    # Other rules:
    "D205",  # 1 blank line required between summary line and description
]

[tool.ruff.lint.per-file-ignores]
# Rules that aren't relevant in tests:
"**/{tests}/*" = [
    "S101",  # Use of assert detected
    "F841",  # Local variable is assigned to but never used (triggered by testing raises)
    "PLR2004",  # Magic value used in comparison
]
"spond_classes/__init__.py" = [
    "D400",  # First line should end with a period
    "RUF022", # `__all__` is not sorted
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
